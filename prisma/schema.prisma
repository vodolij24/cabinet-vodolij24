generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model users {
  id              Int      @default(autoincrement())
  chat_id         BigInt   @unique
  firstname       String?  @db.VarChar(255)
  lastname        String?  @db.VarChar(255)
  fathersname     String?  @db.VarChar(255)
  birthdaydate    String?  @db.VarChar(255)
  isAuthenticated Boolean  @default(false)
  phone           String?  @db.VarChar(255)
  goods           String?  @db.VarChar(255)
  units           String?  @db.VarChar(255)
  dialoguestatus  String?  @default("") @db.VarChar(255)
  favoriteDevice  String?  @db.VarChar(255)
  createdAt       DateTime @db.Timestamptz(6)
  updatedAt       DateTime @db.Timestamptz(6)
}

model Apiusers {
  id           Int      @default(autoincrement())
  user_id      BigInt   @unique
  chat_id      BigInt   @unique
  name         String?  @db.VarChar(255)
  birthdaydate String?  @db.VarChar(255)
  phone        String?  @db.VarChar(255)
  email        String?  @db.VarChar(255)
  cards        String?  @db.VarChar(255)
  createdAt    DateTime @db.Timestamptz(6)
  updatedAt    DateTime @db.Timestamptz(6)
}

model achievements {
  id          Int     @id @default(autoincrement())
  code        Int?
  title       String? @db.VarChar(255)
  description String? @db.VarChar(255)
  icon        String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model bonuses {
  id                Int      @default(autoincrement())
  user_id           Int?
  balance           Int?
  transactionAmount Int?
  transactionType   String?  @db.VarChar(255)
  createdAt         DateTime @db.Timestamptz(6)
  updatedAt         DateTime @db.Timestamptz(6)

  @@ignore
}

model bot_transactions {
  id              Int      @id @default(autoincrement())
  user_id         Int?
  device          Int
  date            String   @db.VarChar(255)
  waterRequested  Float?
  waterFullfilled Float?
  cashPaymant     Float?
  cardPaymant     Float?
  onlinePaymant   Float?
  paymantChange   Float?
  isAutorized     Boolean?
  cardId          Int?

  @@map("bot-transactions")
}

model cards {
  id            Int      @default(autoincrement())
  cardId        Int      @unique
  Number        String?  @db.VarChar(255)
  Card          String?  @db.VarChar(255)
  Type          String?  @db.VarChar(255)
  CardGroup     String?  @db.VarChar(255)
  WaterQty      Int?
  AllQty        Int?
  MoneyPerMonth Int?
  LitersPerDay  Int?
  Discount      Int?
  status        String?  @db.VarChar(255)
  createdAt     DateTime @db.Timestamptz(6)
  updatedAt     DateTime @db.Timestamptz(6)
}

model daily_statistics {
  id                    Int      @id @default(autoincrement())
  date                  String   @unique @db.VarChar(255)
  totalWater            Float
  totalTransactions     Int
  uniqueUsers           Int
  topUserId             Int?
  topUserVolume         Float?
  topDeviceId           Int?
  topDeviceTransactions Int?
  topDeviceVolume       Float?
  totalRevenue          Float
  cashRevenue           Float
  cardRevenue           Float
  onlineRevenue         Float
  failedTransactions    Int
  createdAt             DateTime @db.Timestamptz(6)
  updatedAt             DateTime @db.Timestamptz(6)
}

model workers {
  id        Int     @id @default(autoincrement())
  chatId    BigInt  @unique
  name      String?
  phone     String?
  active    Boolean @default(true)
  tasks     tasks[]  // Зв’язок один-до-багатьох
}

enum TaskStatus {
  todo
  in_progress
  done
}

enum TaskPriority {
  low
  medium
  high
}

model tasks {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  status      String?
  priority    String?
  deviceId    Int?
  completedAt DateTime?
  workerId    Int?
  worker      workers?  @relation(fields: [workerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}



/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transactions {
  id              Int      @default(autoincrement())
  user_id         Int?
  device          Int
  date            String   @db.VarChar(255)
  waterRequested  Float?   @db.Real
  waterFullfilled Float?   @db.Real
  cashPaymant     Float?   @db.Real
  cardPaymant     Float?   @db.Real
  onlinePaymant   Float?   @db.Real
  paymantChange   Float?   @db.Real
  isAutorized     Boolean?
  cardId          Int?
  createdAt       DateTime @db.Timestamptz(6)
  updatedAt       DateTime @db.Timestamptz(6)

  @@ignore
}

model user_achievements {
  id             Int     @id @default(autoincrement())
  user_id        BigInt?
  achievement_id Int?
  achieved_at    String? @db.VarChar(255)
}
